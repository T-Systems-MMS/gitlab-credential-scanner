---

stages:
  - test
  - build
  - scan

variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ''
  DOCKER_DRIVER: overlay2
  GIT_DEPTH: 0

test:
  stage: test
  script:
    - docker build -t kics .
    - docker run --rm -e GITLAB_ACCESS_TOKEN=${KICS_SCAN_TEST_TOKEN} kics --scan-repo scanner-insecure-repo --write-json-file=scanner-results-test.json
  artifacts:
    paths:
      - "scanner-results-test.json"
    when: on_success
    expire_in: "10 days"
  rules:
    - if: ${CI_PIPELINE_SOURCE} == "merge_request_event" && ${CI_MERGE_REQUEST_TARGET_BRANCH_NAME} != ${CI_DEFAULT_BRANCH}
    - if: ${CI_MERGE_REQUEST_SOURCE_BRANCH_NAME}
    - if: ${CI_PIPELINE_SOURCE} == "schedule"
      when: never
    - if: ${CI_PIPELINE_SOURCE} == "push"
      when: never
    - changes:
        - Dockerfile
        - requirements.txt
        - repo_scanner.py

build:
  stage: build
  image: docker:latest
  services:
    - name: docker:dind
      command: ["--registry-mirror", "${REGISTRY_MIRROR}"]
  tags:
    - docker-build
  script:
    - docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}
    - docker build -t ${CI_REGISTRY_IMAGE}:latest -t ${CI_REGISTRY_IMAGE}:${CI_JOB_ID} .
    - docker push ${CI_REGISTRY_IMAGE}:latest
    - docker push ${CI_REGISTRY_IMAGE}:${CI_JOB_ID}


scan:
  stage: scan
  script:
    - >
      docker run --rm
      -e GITLAB_ACCESS_TOKEN=${GITLAB_ACCESS_TOKEN}
      ${CI_REGISTRY_IMAGE}:latest
      --write-json-file=scanner-results.json
  artifacts:
    paths:
      - "scanner-results.json"
    when: on_success
    expire_in: "10 days"
